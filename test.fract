#var a = 4
#var b = 4.0
#var c = false
#c = true
#b + a + c

#var test = [4]
#test[3] = 1
#test
#test[3] = [4]

#if ((b + b <> 8) && false) || (b + b == 8 && 2 == 2)
#  3
#  if true == false
#    5
#  elif false == false
#    10
#    4
#  end
#end

#var test = [ 0, 1, 0, 0, 0 ]
#test[4] = 5
#test1[0] = 2
#test
#test1
#test + test1

#if true == false
#  5
#elif false == false
#  10
#  4
#end

#var t1 = [ 0, 3, 2, 1, 90 ]
#var t2 = [ ]
#t1 == t2

#for index in [ 0, 1, 2, 3, 4.0 ]
#  var test = index
#  index
#end

# PRIME NUMBER BETWEEN 1 an 100
#var num = 1
#for num <= 100
#  num = num + 1
#  var prime = true
#  var i = 2
#  for i < num
#    i = i + 1
#    if num % i == 0
#      prime = false
#      break
#    end
#  end
#  if prime
#    num
#  end
#end

#var counter = 1
#for counter <= 500
#  var total = 0
#  var ccounter = 1
#  for ccounter < counter
#    if counter % ccounter == 0
#      total = total + ccounter
#    end
#    ccounter = ccounter + 1
#  end
#  if total == counter
#    counter
#  end
#  counter = counter + 1
#end

# ARRAY SUM TEST
#>
var array = [ 0, 4, 4, 2 ]   # Elements: 0 4 4 2
array = array + 5            # Elements: 5 9 9 7
array
del array
var array = [ 0, 4, 4, 2 ]   # Elements: 0 4 4 2
var array2 = [ 2, 2, 2, 2 ]  # Elements: 2 2 2 2
array = array + array2       # Elements: 2 6 6 4
array
del array, array2
<#

# FUNCTION TEST
#>
func calc.length(list)
	var counter = 0
	for _ in list
		counter = counter + 1
	end
	ret counter
end
<#

#>
func calc.range(start, to, step=1)
	var lst = [0]
	var index = 0
	for start < to
		lst = [ lst, start ]
		start = start + step
		index = index + 1
	end
	ret lst
end
<#

#>
open t std.array

var arr = [1, 2, 3, 90, 4, 2, 3]

var array = t.Clone(arr)
array[0] = 0

print(array)
print(arr)

exit()
<#

open s std.strings

print(s.IsNumericChar("a"))

exit()

open t std.array

var arr = range(1, 11)

print(arr)

print(t.Reverse(arr))

exit()

open std.math

for _, number in range(0, 10)
	print(number, fin=" ")
	print(math.Prime(number))
end
